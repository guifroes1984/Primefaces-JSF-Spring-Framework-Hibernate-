<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" 
	xmlns:jsp="http://java.sun.com/xml/ns/javaeejsp" 
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" metadata-complete="true" version="3.0">
	<display-name>Projeto Java Web Completo</display-name>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
	<session-config>
		<session-timeout>15</session-timeout> <!-- Invalida a sessão em 15 minutos -->
		<tracking-mode>COOKIE</tracking-mode>
	</session-config>
	
	<error-page>
		<exception-type>org.springframework.security.access.AccessDeniedException</exception-type> <!-- Excessão negada se tentarmos acessar o projeto quando estiver configurado no spring Security. Se tentar acessar alguma página que o usuário não está permitido então ele vai lançar essa excessão -->
		<location>/error/acessoNegado.jsf</location> <!-- Lançando a excessão, quero que ele mostre uma página, ou seja, essa página -->
	</error-page>
	
	<error-page>
		<exception-type>com.sun.faces.context.FacesFileNotFoundException</exception-type> <!-- Erro de excessão de página que não existe -->
		<location>/error/paginaNaoEncontrada.jsf</location> <!-- Lançando a excessão, quero que ele mostre uma página, ou seja, essa página -->
	</error-page>
	
	<error-page>
		<error-code>403</error-code> <!-- Se o servidor retornar um erro 403 "Acesso negado" -->
		<location>/error/acessoNegado.jsf</location> <!-- Redireciona para eesa pagina -->
	</error-page>
	
	<error-page>
		<error-code>404</error-code>
		<location>/error/404.jsf</location>
	</error-page>
	
	<error-page>
		<error-code>500</error-code> <!-- Se o servidor retornar um erro 500 "Erro interno do servidor" -->
		<location>/error/error.jsf</location> <!-- Redireciona para eesa pagina -->
	</error-page>
	
	<jsp-config>
		<jsp-property-group>
			<url-pattern>/**</url-pattern>
			<el-ignored>false</el-ignored>
		</jsp-property-group>
	</jsp-config>
	
	<context-param>
		<param-name>javax.faces.FACELETS_SKIP_COMMENTS</param-name> <!-- O JSF vai reconhecer que podemos escrever os comentários na página -->
		<param-value>true</param-value>
	</context-param>
	
	<context-param>
		<param-name>com.sun.faces.allowTextChildren</param-name> <!-- Para poder recarregar os componentes dentro dele -->
		<param-value>true</param-value>
	</context-param>
	
	<context-param>
		<param-name>com.sun.faces.expressionFactory</param-name> <!-- Parametro para evitar um erro se estivermos usando uma versão do container do JSP, que suas bibliotecas sejam menores do que 2.1 -->
		<param-value>com.sun.el.ExpressionFactoryImpl</param-value>
	</context-param>
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
					/WEB-INF/applicationContext.xml
					/WEB-INF/spring-servlet-servlet.xml
					/WEB-INF/applicationContext-security.xml
		</param-value>
	</context-param>
	
	<context-param>
		<param-name>javax.faces.FACELETS_REFRESH_PERIOD</param-name><!-- Paramentro de tempo de uma pagina jsf demora para ser atualizada na tela de desenvolvimento.  -->
		<param-value>0</param-value> <!-- Tempo em segundos -->
	</context-param>
	
	<context-param>
		<param-name>javax.faces.DEFAULT_SUFFIX</param-name> <!-- Quais a extensões de página que vamos trabalhar -->
		<param-value>.xhtml .html .jsf</param-value> <!-- Falar para o projeto quais as extensões de página -->
	</context-param>
	
	<context-param>
		<param-name>javax.faces.PROJECT_STAGE</param-name> <!-- Parametro que fala qual estágio que o no projeto se encontra, se está em desenvolvimento ou em produção -->
		<param-value>Production</param-value> <!-- O valor colocamos em produção. Tem uma visão maior de como vai ser rodando no cliente -->
	</context-param>
	
	<context-param>
		<param-name>primefaces.THEME</param-name>
		<param-value>smoothness</param-value>
	</context-param>
	
	<filter>
		<filter-name>conexaoFilter</filter-name>
		<filter-class>br.com.project.filter.FilterOpenSessionInView</filter-class>
	</filter>
	
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	
	<filter>
		<filter-name>encoding-filter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>ISO-8859-1</param-value>
		</init-param>
	</filter>
	
	<filter>
		<filter-name>PrimeFaces FileUpload Filter</filter-name>
		<filter-class>org.primefaces.webapp.filter.FileUploadFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>encoding-filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>conexaoFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>PrimeFaces FileUpload Filter</filter-name> <!-- Desclarar parametro de upload de imagem -->
		<servlet-name>Faces Servlet</servlet-name> <!-- Qual é o Servelet names -->
		<url-pattern>*.jsf</url-pattern> <!-- Passa tudo que for *,jsf -->
	</filter-mapping>
	
	<listener>
		<listener-class>br.com.project.listener.ContextLoaderListenerCaixakiUtils</listener-class>
	</listener>
	
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	
	<listener>
		<listener-class>br.com.project.listener.CustomListener</listener-class>
	</listener>
	
	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>
	
	<resource-ref>
		<description>DataSource datasource</description>
		<res-ref-name>jdbc/datasource</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
	
	<servlet>
		<servlet-name>spring-servlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>spring-servlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>Faces Servlet</servlet-name> <!-- Declarar a servlet do JSF. Onde ele processa todo o ciclo de vida do JSF para poder escrever o JSF no navegador -->
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class> <!-- Qual vai ser a classe -->
		<load-on-startup>1</load-on-startup> <!-- Define quando o servlet vai ser carregado. Define como 1 para ele iniciar quando o servidor estiver subindo -->
	</servlet>
	
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name> <!-- Faz o mapeamento da Servlet -->
		<url-pattern>*.jsf</url-pattern> <!-- Qual a vai ser as extensões de página. Vai ser tudo que tenha jsf na url do navegador -->
	</servlet-mapping>
	
</web-app>